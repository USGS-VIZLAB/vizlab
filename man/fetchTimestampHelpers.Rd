% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetchTimestampHelpers.R
\name{fetchTimestampHelpers}
\alias{fetchTimestampHelpers}
\alias{urlFetcher}
\alias{writeTimestamp}
\alias{updateTimestamp}
\alias{formatTimestamp}
\alias{locateTimestampFile}
\alias{readTimestamp}
\title{Methods to assist in writing and debugging custom fetchTimestamp methods}
\usage{
urlFetcher(id, location = NA, remoteURL)

writeTimestamp(new.timestamp, viz, timestamp.mtime = NA)

updateTimestamp(viz, verbose = FALSE)

formatTimestamp(timestamp)

locateTimestampFile(id)

readTimestamp(viz)
}
\arguments{
\item{id}{the viz id - should be the same as for the viz in the calling
function}

\item{location}{the fetched data file location - should be the same as for
the viz in the calling function. May be NA if you're only passing the
output to \code{\link[=fetchTimestamp]{fetchTimestamp()}}; required for \code{\link[=fetch]{fetch()}}.}

\item{remoteURL}{the new URL to use for fetching the data and/or timestamp
(assuming \code{\link[=fetch]{fetch()}} or \code{\link[=fetchTimestamp]{fetchTimestamp()}} is called on the results of this
function)}

\item{new.timestamp}{the new timestamp to write to file}

\item{viz}{a viz item (e.g., from as.viz)}

\item{timestamp.mtime}{the timestamp to assign to the timestamp file's
metadata (using Sys.setFileTime - sets the mtime=modified time property);
NA leaves the metadata alone}

\item{verbose}{logical to pass on to \code{remake::make()}}

\item{timestamp}{POSIXct timestamp to format into a character string}
}
\description{
These functions are used within vizlab \code{\link[=fetchTimestamp]{fetchTimestamp()}} methods and may be
useful within custom methods as well.
}
\examples{
\dontrun{
# this custom method probably won't do what you want,
# just shows how to use the helper functions
fetchTimestamp.myfetcher <- function(viz) {
  timestamp.file <- locateTimestampFile(viz$id)
  old.timestamp <- readTimestamp(viz)
  new.timestamp <- getOnlineTimestamp() # made-up function, not implemented
  if(!file.exists(timestamp.file) || old.timestamp < new.timestamp) {
    writeTimestamp(new.timestamp, viz)
  }
  invisible()
}
}
\dontrun{
fetchTimestamp.myfetcher <- function(viz) {
  url <- constructURLFromViz(viz)
  urlLastModified(viz$id, remoteURL=url)
}
}
}
