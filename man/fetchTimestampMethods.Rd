% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetchTimestampHelpers.R
\name{fetchTimestampMethods}
\alias{fetchTimestampMethods}
\alias{alwaysCurrent}
\alias{neverCurrent}
\title{Functions to use as custom fetchTimestamp methods.}
\usage{
alwaysCurrent(viz)

neverCurrent(viz)
}
\arguments{
\item{viz}{the identifier for a fetch item in viz.yaml}
}
\description{
These functions serve common use cases for timestamp fetching. See also
\link{fetchTimestampHelpers}, which allows you to write still more customized
methods, and pre-defined \code{\link[=fetchTimestamp]{fetchTimestamp()}} methods for several fetchers
supported by \code{vizlab}.
}
\details{
\code{alwaysCurrent} - writes a timestamp file just once, the first time the data
file is present when fetchTimestamp is called. Edits the modified time,
mtime, of the timestamp file to equal the modified time of the data file, so
that on subsequent builds the data file is always up to date relative to the
timestamp file. REFETCHES MAY STILL OCCUR if there are changes to the fetch
item's viz.yaml chunk, scripts, or other dependencies.
}
\examples{
fetchTimestamp.myfetcher <- alwaysCurrent
fetchTimestamp.myotherfetcher <- neverCurrent
}
